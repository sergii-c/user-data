version: 0.1

phases:      
  install:
    commands:      
      - apt-get update -y
      - apt-get install -y software-properties-common
      - add-apt-repository ppa:openjdk-r/ppa
      - apt-get update -y
      - apt-get install -y openjdk-8-jdk-headless
      - echo apt-get install -y maven      
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region=us-east-1)
  build:
    commands:
      - echo Build started on `date`      
      - echo Now we go with maven
      - mvn clean package            
      - $(cp user-data-client/target/user-data-client-*.jar user-data-client.jar)
      - echo Building the Docker image...      
      - docker build -t poc-userdata .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Tagging image
      - echo $(git branch -a --contains $CODEBUILD_RESOLVED_SOURCE_VERSION | tail -n 1 | sed 's/.*\///')
      - export CURRENT_BRANCH_SHORT=$(git branch -a --contains $CODEBUILD_RESOLVED_SOURCE_VERSION | tail -n 1 | sed 's/.*\///')
      - echo $CURRENT_BRANCH_SHORT
      - docker tag poc-userdata:latest 671124307843.dkr.ecr.us-east-1.amazonaws.com/poc-userdata:$CURRENT_BRANCH_SHORT
      - echo Pushing the Docker image...
      - docker push 671124307843.dkr.ecr.us-east-1.amazonaws.com/poc-userdata:$CURRENT_BRANCH_SHORT
      - aws cloudformation deploy --stack-name=infrastructure-$CURRENT_BRANCH_SHORT --template-file=cf/init.yml --capabilities=CAPABILITY_IAM --parameter-overrides EnvironmentName=`poc-$(git branch | grep \* | cut -d ' ' -f2)`
      - aws cloudformation deploy --stack-name=user-data-$CURRENT_BRANCH_SHORT --template-file=cf/user-data.yml --capabilities=CAPABILITY_IAM --parameter-overrides EnvironmentName=`poc-$(git branch | grep \* | cut -d ' ' -f2)`
artifacts:
  files:
    - user-data-client.jar